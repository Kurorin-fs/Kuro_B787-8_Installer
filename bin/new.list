['787-8', 'GEnx-1B67']
Only flaps 5, 15, 20 can be set for takeoff
[5, 15, 20]
let flapAngles = [0, 1, 5, 15, 20, 25, 30];
let crzCGCell = '24.0%';
            SimVar.SetSimVarValue('PAYLOAD STATION WEIGHT:1', 'Pounds', 240);
            SimVar.SetSimVarValue('PAYLOAD STATION WEIGHT:2', 'Pounds', 240);
return this.fmc.setZeroFuelWeight((264500 + B787_10_FMC_PayloadManagerPage.requestedPayload) / 1000, EmptyCallback.Void, true);
                    'FORWARD_CARGO': this.getPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.FORWARD_CARGO)
            SimVar.SetSimVarValue('PAYLOAD STATION WEIGHT:7', 'Pounds', 0);\n            SimVar.SetSimVarValue('PAYLOAD STATION WEIGHT:8', 'Pounds', 0);\n            SimVar.SetSimVarValue('PAYLOAD STATION WEIGHT:9', 'Pounds', 0);\n            SimVar.SetSimVarValue('PAYLOAD STATION WEIGHT:10', 'Pounds', 0);
                    'COPILOT': this.getPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.COPILOT),\n                    'CREW': this.getPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.CREW)
					'BUSINESS_CLASS': this.getPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.BUSINESS_CLASS),\n                    'PREMIUM_PLUS': this.getPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.PREMIUM_PLUS),
                    'BULK': this.getPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.BULK),\n                    'REAR_CARGO': this.getPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.REAR_CARGO)
            await this.setPayloadValue(7, 0);\n            await this.setPayloadValue(8, 0);\n            await this.setPayloadValue(9, 0);\n            await this.setPayloadValue(10, 0);
                actualValue = this.getPayloadValueFromCache(B787_10_FMC_PayloadManagerPage.payloadIndex.FORWARD_CARGO);\n                await this.setPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.FORWARD_CARGO, amount + actualValue);
                actualValue = this.getPayloadValueFromCache(B787_10_FMC_PayloadManagerPage.payloadIndex.REAR_CARGO);\n                await this.setPayloadValue(B787_10_FMC_PayloadManagerPage.payloadIndex.REAR_CARGO, amount + actualValue);
                'CREW': 3,\n                'BUSINESS_CLASS': 4,\n                'PREMIUM_PLUS': 5,\n                'PREMIUM_ECONOMY': 6,\n                'ECONOMY_CLASS': 7,\n                'FORWARD_CARGO': 8,\n                'REAR_CARGO': 9,\n                'BULK': 10
            return 503500;
            return 100;\n        }\n        getDeratedClimbThrustN1(altitude) {\n            let DeratedClimbThrustN1;\n            if (altitude < 10000) {\n                DeratedClimbThrustN1 = 1;\n            }\n            else if (altitude > 30000) {\n                DeratedClimbThrustN1 = 0;\n            }\n            else {\n                DeratedClimbThrustN1 = 0.01 * Math.floor(100 * (30000 - altitude) / 20000);\n            }\n            return DeratedClimbThrustN1;\n        }\n        getThrustClimbLimit() {\n            let altitude = Simplane.getAltitude();\n            let temperature = SimVar.GetSimVarValue('AMBIENT TEMPERATURE', 'celsius');\n            return this.getClimbThrustN1(temperature, altitude) - this.getThrustCLBMode() * 8.6 * this.getDeratedClimbThrustN1(altitude);
             let selectedAltitude = altitude;
        }\n        controlDescentOld() {
        tryExecuteBAL() {
        }\n        updateSideButtonActiveStatus() {
             if (altitude < 25) {\n             this._stopPitchInterval50 = true;